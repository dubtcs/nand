// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // Choose RAM or IO
    DMux4Way(in=load,sel=address[13..14],a=loadRAM1,b=loadRAM2,c=loadSCR,d=loadKBD);
    
    // Consolidate RAM usage
    Or(a=loadRAM1,b=loadRAM2,out=loadRAM);
    RAM16K(in=in,load=loadRAM,address=address[0..13],out=outRAM);

    Screen(in=in,load=loadSCR,address=address[0..12],out=outSCR);
    Keyboard(out=outKBD);

    // Decide what to out
    Mux4Way16(a=outRAM,b=outRAM,c=outSCR,d=outKBD,sel=address[13..14],out=out);
    // ^^^ I had b set to outRAM and outSCR at the same time. Caused a headache lmao
}


//DMux4Way(in=true,sel=address[13..14],a=useRAM1,b=useRAM2,b=useSCR,d=useKBD);
//
//    Or(a=useRAM1,b=useRAM2,out=useRAM);
//    And(a=useRAM,b=load,out=loadRAM);
//    RAM16K(in=in,load=loadRAM,address=address[0..13],out=outRAM);
//
//    And(a=useSCR,b=load,out=loadSCR);
//    Screen(in=in,load=loadSCR,address=address[0..12],out=outSCR);
//
//    Keyboard(out=outKBD);
//
//    Mux16(a=outSCR,b=outKBD,sel=useKBD,out=outIO);
//    Mux16(a=outIO,b=outRAM,sel=useRAM,out=out);