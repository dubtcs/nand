// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    static int kb;
    static String str;

    /** Initializes the keyboard. */
    function void init() {
        let kb = 24576;
        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        return kb[0];
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
        while(kb[0] = 0)
        {
            do Sys.wait(10); // 10 ms
        }
        do Output.printChar(kb[0]);
        return kb[0];
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
        var boolean run;
        var char c;

        let str = String.new(63);
        let run = true;
        do Output.printString(message);
        while(run)
        {
            let c = Keyboard.readChar();
            if(c < 127)
            {
                do str.appendChar(c);
            }
            else
            {
                if(c = 128) // new line
                {
                    do Output.println();
                    let run = false;
                }
                else // backspace
                {
                    do str.eraseLastChar();
                }
            }
            
            if(str.length() > 62) // line overflow
            {
                let run = false;
            }
        }
        do str.dispose();
        return str;
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
        var int n;
        var char c;
        var boolean run;

        let run = true;
        do Output.printString(message);
        while(run)
        {
            let c = Keyboard.readChar();
            if((c > 47) & (c < 58))
            {
                do Output.printChar(c);
                let n = (n * 10) + (c - 48);
            }
            else
            {
                if(c = 129)
                {
                    do Output.backSpace();
                    let n = (n / 10);
                }
                else
                {
                    let run = false;
                }
            }
        }

        return n;
    }
}
